# This is a sample workflow for building and deploying a Next.js site to GitHub Pages.
# It was generated by GitHub Actions and has been modified for this project.
# For more information, see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # This workflow runs on pushes to the 'master' branch.
  push:
    branches: ["master"]

  # This allows the workflow to be run manually from the Actions tab in GitHub.
  workflow_dispatch:

# Sets the permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages.
# The GITHUB_TOKEN is a special access token that you can use to authenticate on behalf of GitHub Actions.
permissions:
  contents: read
  pages: write
  id-token: write

# This setting allows only one concurrent deployment.
# It will skip runs that are queued between the run in-progress and the latest queued run.
# It will not cancel in-progress runs.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # The 'build' job is responsible for building the Next.js site.
  build:
    runs-on: ubuntu-latest
    steps:
      # This step checks out the repository under $GITHUB_WORKSPACE, so the workflow can access it.
      - name: Checkout
        uses: actions/checkout@v4
      # This step detects the package manager (npm or yarn) used in the project.
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      # This step sets up Node.js in the workflow.
      # It uses the package manager detected in the previous step to configure caching.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      # This step configures GitHub Pages for the deployment.
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # This option automatically injects the basePath in the Next.js configuration file
          # and disables server-side image optimization, which is required for static site generation.
          static_site_generator: next
      # This step restores the cache for the .next/cache directory.
      # Caching is used to speed up the build process.
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # A new cache is generated whenever the package lock file or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If the source files changed but the packages did not, the build is rebuilt from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      # This step installs the project dependencies.
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      # This step builds the Next.js site.
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      # This step uploads the build artifact to GitHub Pages.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # The 'deploy' job is responsible for deploying the site to GitHub Pages.
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # This job depends on the 'build' job to complete successfully.
    needs: build
    steps:
      # This step deploys the site to GitHub Pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
